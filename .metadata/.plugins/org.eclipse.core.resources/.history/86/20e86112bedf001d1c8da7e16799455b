package br.ucsal;

import java.util.Scanner;

public class TestaRelogio {

	public static void main(String[] args) {
        @SuppressWarnings("resource")
		Scanner sc = new Scanner(System.in);
        int jogadorAtual = 1;

        System.out.println("Bem-vindo ao jogo de xadrez!");

        // Criação dos jogadores
        Jogador jogador1 = new Jogador("João", 'A');
        Jogador jogador2 = new Jogador("Maria", 'V');

        // Criação do relógio
        Relogio relogio = new Relogio(60);

        // Criação da partida
        Partida partida = new Partida(jogador1, jogador2, relogio);

        // Início da partida
        partida.iniciarPartida();

        // Loop para permitir que os jogadores fa�am suas jogadas
        

        
        if(partida.getNumeroJogadas() == 0) System.out.println("Digite 'jogar' para fazer a primeira jogada e 'parar' para encerrar seu tempo.");
        String comando = sc.nextLine();
        AguardaInput inputListener = new AguardaInput();
        Thread inputThread = new Thread(inputListener);
        if (!inputThread.isAlive()) inputThread.start();
        
        synchronized (while (!partida.isPartidaEncerrada())) {
        
            if (comando.equals("jogar")) {          	           	
            	if (jogadorAtual == 1) {
                	if(partida.getNumeroJogadas() == 0) {
                		relogio.iniciarTempoJogador1();
                		partida.setNumeroJogadas(partida.getNumeroJogadas() + 1);;
				    	System.out.println("A partida está rolando é a vez do jogador: " + jogadorAtual);
                	}
					jogador1.realizarJogada(relogio, partida);
					String input1 = inputListener.getLastInput();
					if (!input1.isEmpty()) {
		                if (input1.equals("parar")) {
							relogio.pausarTempoJogador1();
							System.out.println("Tempo gasto por " + jogador1.getNome() + ": " + (relogio.getTempoMaximo() - relogio.getTempoRestanteJogador1()) + " segundos.");
					        System.out.println("Tempo gasto por " + jogador2.getNome() + ": " + (relogio.getTempoMaximo() - relogio.getTempoRestanteJogador2()) + " segundos.");
		                	relogio.iniciarTempoJogador2();
					        jogadorAtual = 2;
					    	System.out.println("A partida está rolando é a vez do jogador: " + jogadorAtual);
	                		partida.setNumeroJogadas(partida.getNumeroJogadas() + 1);;
		            		jogador2.realizarJogada(relogio, partida);	
		                } 
		            }
            	}
            	else {
            		if(partida.getNumeroJogadas() == 1) {
            			relogio.iniciarTempoJogador2();
                		partida.setNumeroJogadas(partida.getNumeroJogadas() + 1);;				    	
            		}
            		jogador2.realizarJogada(relogio, partida);	
            		String input1 = inputListener.getLastInput();
					if (!input1.isEmpty()) {
		                if (input1.equals("parar")) {
		                	relogio.pausarTempoJogador2();
		                	System.out.println("Tempo gasto por " + jogador1.getNome() + ": " + (relogio.getTempoMaximo() - relogio.getTempoRestanteJogador1()) + " segundos.");
		                    System.out.println("Tempo gasto por " + jogador2.getNome() + ": " + (relogio.getTempoMaximo() - relogio.getTempoRestanteJogador2()) + " segundos.");
		                	relogio.iniciarTempoJogador1();
		                    jogadorAtual = 1;
		                	System.out.println("A partida está rolando é a vez do jogador: " + jogadorAtual);
	                		partida.setNumeroJogadas(partida.getNumeroJogadas() + 1);;
							jogador1.realizarJogada(relogio, partida);
		                } 
		            }
				}
            }
        }

        // Exibição das informações da partida
        System.out.println("A partida terminou!");
        System.out.println("Número de jogadas: " + partida.getNumeroJogadas());
        System.out.println("Hora de início: " + partida.getHoraInicio());
        System.out.println("Hora de fim: " + partida.getHoraFim());
        System.out.println("Tempo gasto por " + jogador1.getNome() + ": " + (relogio.getTempoMaximo() - relogio.getTempoRestanteJogador1()) + " segundos.");
        System.out.println("Tempo gasto por " + jogador2.getNome() + ": " + (relogio.getTempoMaximo() - relogio.getTempoRestanteJogador2()) + " segundos.");
    }

	

}
